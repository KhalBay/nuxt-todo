import{al as n,am as a}from"./CaL9YXOh.js";const r=n("tasks",{state:()=>({tasks:[]}),actions:{setTasks(t){this.tasks=t},addTask(t){this.tasks.push(t)},updateTaskInStore(t){const s=this.tasks.findIndex(e=>e.id===t.id);s!==-1&&this.tasks.splice(s,1,t)},removeTask(t){this.tasks=this.tasks.filter(s=>s.id!==t)},toggleTaskStatus(t){const s=this.tasks.find(e=>e.id===t);s&&(s.isDone=!s.isDone)},getTaskById(t){return this.tasks.find(s=>s.id===t)},formatDate(t){if(!t)return"";const s=new Date(t),e=s.getMonth()+1<10?"0"+(s.getMonth()+1):s.getMonth()+1;return`${s.getDate()<10?"0"+s.getDate():s.getDate()}.${e}.${s.getFullYear()}`}},getters:{doneTasks:t=>t.tasks.filter(s=>s.isDone),activeTasks:t=>t.tasks.filter(s=>!s.isDone),totalTasks:t=>t.tasks.length}}),i={getAll:()=>a.get("tasks"),getById:t=>a.get(`tasks/${t}`),create:t=>a.post("tasks",t),update:(t,s)=>a.put(`tasks/${t}`,s),delete:t=>a.delete(`tasks/${t}`)},d={task:i};export{d as a,r as u};
